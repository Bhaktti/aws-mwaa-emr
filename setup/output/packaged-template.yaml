AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Resources for the Demo np ETL with MWAA
Parameters:
  DemoBucket:
    Description: The bucket used by CFN and other Demo
    Type: AWS::SSM::Parameter::Value<String>
    Default: /mwaa/S3/DemoBucket
Resources:
  LambdaCommonPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mwaa-*
        - Effect: Allow
          Action:
          - ssm:GetParameter
          - ssm:GetParameters
          Resource:
            Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/mwaa/*
  RoleLambdaExecutionStep1:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - Ref: LambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
      - PolicyName:
          Fn::Sub: mwaa-np-process
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
            - Fn::Sub: arn:aws:s3:::${DemoBucket}
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource:
            - Fn::Sub: arn:aws:s3:::${DemoBucket}/*
          - Effect: Allow
            Action:
            - glue:GetJobRun
            - glue:GetJobRuns
            - glue:StartJobRun
            Resource:
            - Fn::Sub: arn:aws:glue:${AWS::Region}:${AWS::AccountId}:job/mwaa-*
  RoleLambdaExecutionStep2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - Ref: LambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
      - PolicyName:
          Fn::Sub: mwaa-np-crawl
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - glue:StartCrawler
            Resource:
            - Fn::Sub: arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/mwaa-np-*
  RoleLambdaExecutionErrorStep:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - Ref: LambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
      - PolicyName:
          Fn::Sub: mwaa-np-error
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sqs:DeleteMessage
            - sqs:DeleteMessageBatch
            - sqs:GetQueueAttributes
            - sqs:GetQueueUrl
            - sqs:ListQueues
            - sqs:ListDeadLetterSourceQueues
            - sqs:ListQueueTags
            - sqs:ReceiveMessage
            - sqs:SendMessage
            - sqs:SendMessageBatch
            Resource:
            - Fn::Sub: arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:mwaa-*
  StatesExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName:
          Fn::Sub: mwaa-np-states-execution
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
              Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mwaa-*
          - Effect: Allow
            Action:
            - states:DescribeExecution
            - states:StopExecution
            Resource:
              Fn::Sub: arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:NP-Transform-job
  LambdaStep1:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: s3://demobucketnov2024/9722f089d015c8846cae147b8d9ffd04
      FunctionName: mwaa-process-np
      Description: Process np data to create aggregated dataset
      MemorySize: 1536
      Timeout: 900
      Role:
        Fn::GetAtt:
        - RoleLambdaExecutionStep1
        - Arn
  LambdaJobCheckStep:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: s3://demobucketnov2024/8cf74ddc8f91d15da0038ec9c7d87811
      FunctionName: mwaa-checkjob-np
      Description: Checks if job has finished (success/failure)
      MemorySize: 256
      Timeout: 300
      Role:
        Fn::GetAtt:
        - RoleLambdaExecutionStep1
        - Arn
  LambdaStep2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: s3://demobucketnov2024/9b7c4d45e180e9feb8f92ac8eee6c110
      FunctionName: mwaa-crawl-np
      Description: Glue crawler
      MemorySize: 512
      Timeout: 300
      Role:
        Fn::GetAtt:
        - RoleLambdaExecutionStep2
        - Arn
  LambdaErrorStep:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: s3://demobucketnov2024/1293c06468b2c10891f5ab0874d57097
      FunctionName: mwaa-np-error
      Description: Fallback lambda to handle messages which failed processing
      MemorySize: 256
      Timeout: 300
      Role:
        Fn::GetAtt:
        - RoleLambdaExecutionErrorStep
        - Arn
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: NP-Transform-job
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"np Lens Transformation Flow\",\n  \"StartAt\": \"\
          Try\",\n  \"States\": {\n    \"Try\": {\n      \"Type\": \"Parallel\",\n\
          \      \"Branches\": [\n        {\n          \"StartAt\": \"Process Data\"\
          ,\n          \"States\":{\n            \"Process Data\": {\n           \
          \   \"Type\": \"Task\",\n              \"Resource\": \"${lStep1}\",\n  \
          \            \"Comment\": \"Process np Lens Data\",\n              \"\
          ResultPath\": \"$.body.job\",\n              \"Next\": \"Wait\"\n      \
          \      },\n            \"Wait\": {\n                \"Type\": \"Wait\",\n\
          \                \"Seconds\": 15,\n                \"Next\": \"Get Job status\"\
          \n            },\n            \"Get Job status\": {\n                \"\
          Type\": \"Task\",\n                \"Resource\": \"${lCheckJob}\",\n   \
          \             \"ResultPath\": \"$.body.job\",\n                \"Next\"\
          : \"Did Job finish?\"\n            },\n            \"Did Job finish?\":\
          \ {\n                \"Type\": \"Choice\",\n                \"Choices\"\
          : [{\n                    \"Variable\": \"$.body.job.jobDetails.jobStatus\"\
          ,\n                    \"StringEquals\": \"SUCCEEDED\",\n              \
          \      \"Next\": \"Run Glue Crawler\"\n                },{\n           \
          \         \"Variable\": \"$.body.job.jobDetails.jobStatus\",\n         \
          \           \"StringEquals\": \"FAILED\",\n                    \"Next\"\
          : \"Job Failed\"\n                }],\n                \"Default\": \"Wait\"\
          \n            },\n              \"Job Failed\": {\n              \"Type\"\
          : \"Fail\",\n              \"Error\": \"Job Failed\",\n              \"\
          Cause\": \"Job failed, please check the logs\"\n            },\n       \
          \     \"Run Glue Crawler\": {\n              \"Type\": \"Task\",\n     \
          \         \"Resource\": \"${lStep2}\",\n              \"Comment\": \"Run\
          \ Glue Crawler\",\n              \"ResultPath\": \"$.statusCode\",\n   \
          \           \"End\": true\n            }\n          }\n        }\n     \
          \ ],\n      \"Catch\": [\n        {\n          \"ErrorEquals\": [ \"States.ALL\"\
          \ ],\n          \"ResultPath\": null,\n          \"Next\": \"Error\"\n \
          \       }\n      ],\n      \"Next\": \"Done\"\n    },\n    \"Done\": {\n\
          \      \"Type\": \"Succeed\"\n    },\n    \"Error\": {\n      \"Type\":\
          \ \"Task\",\n      \"Resource\": \"${lError}\",\n      \"Comment\": \"Handling\
          \ Error\",\n      \"Next\": \"Failed\"\n    },\n    \"Failed\": {\n    \
          \  \"Type\": \"Fail\"\n    }\n  }\n}"
        - lStep1:
            Fn::GetAtt:
            - LambdaStep1
            - Arn
          lStep2:
            Fn::GetAtt:
            - LambdaStep2
            - Arn
          lCheckJob:
            Fn::GetAtt:
            - LambdaJobCheckStep
            - Arn
          lError:
            Fn::GetAtt:
            - LambdaErrorStep
            - Arn
      RoleArn:
        Fn::GetAtt:
        - StatesExecutionRole
        - Arn
  DemoCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - glue.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      Policies:
      - PolicyName: mwaa-glue-crawler
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetBucketLocation
            - s3:ListBucket
            Resource:
            - Fn::Sub: arn:aws:s3:::${DemoBucket}
          - Effect: Allow
            Action:
            - s3:CreateBucket
            Resource: arn:aws:s3:::aws-glue-*
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - arn:aws:s3:::aws-glue-*/*
            - arn:aws:s3:::*/*aws-glue-*/*
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
            - arn:aws:s3:::crawler-public*
            - arn:aws:s3:::aws-glue-*
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:GetBucketVersioning
            - s3:List*
            - s3:PutObject*
            Resource:
            - Fn::Sub: arn:aws:s3:::${DemoBucket}/*
  GlueDataCatalog:
    Type: AWS::Glue::Database
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Description: national-park Database
        Name: mwaa-np-demo-db
  GlueCrawlernp:
    Type: AWS::Glue::Crawler
    Properties:
      Role:
        Fn::GetAtt:
        - DemoCrawlerRole
        - Arn
      DatabaseName:
        Ref: GlueDataCatalog
      Name: mwaa-np-curated-crawler-popular
      Targets:
        S3Targets:
        - Path:
            Fn::Sub: s3://${DemoBucket}/curated/most_popular
  GlueCrawlerRating:
    Type: AWS::Glue::Crawler
    Properties:
      Role:
        Fn::GetAtt:
        - DemoCrawlerRole
        - Arn
      DatabaseName:
        Ref: GlueDataCatalog
      Name: mwaa-np-curated-crawler-toprated
      Targets:
        S3Targets:
        - Path:
            Fn::Sub: s3://${DemoBucket}/curated/top_rated_np
